@using SymptomsProject.Enums
@using System.ComponentModel.DataAnnotations
@using System.Reflection
@model SymptomsProject.Models.ViewModels.SymptomCreateViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Symptom</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div>
                <label asp-for="Symptom.Patient" class="control-label"></label>
                <select asp-for="PatientSelectedId" class="form-control">
                    <option value="">Escolher...</option>
                    @foreach (Patient item in Model.Patients)
                    {
                        <option value="@item.Id">@item.Name</option>
                    }
                </select>
                <span asp-validation-for="PatientSelectedId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Symptom.SeverityType" class="control-label"></label>
                <select asp-for="Symptom.SeverityType" class="form-control">
                    <option value="">Escolher...</option>
                    @foreach (SeverityType item in Enum.GetValues(typeof(SeverityType)))
                    {
                        <option value="@item">@Html.DisplayFor(model => item)</option>
                    }
                </select>
                <span asp-validation-for="Symptom.SeverityType" class="text-danger"></span>
            </div>
            <div>
                <label asp-for="Symptom.SymptomTypes" class="control-label"></label>
                <div class="overflow-auto" style="max-height: 200px;">
                    @foreach (SymptomType item in Enum.GetValues(typeof(SymptomType)))
                    {
                        int index = Array.IndexOf(Enum.GetValues(typeof(SymptomType)), item);
                        <div>
                            <input type="checkbox" name="SymptomsTypesIds[]" value="@index" />
                            @Html.DisplayFor(model => item)
                        </div>
                    }
                </div>
                <span asp-validation-for="Symptom.SymptomTypes" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Symptom.Description" class="control-label"></label>
                <input asp-for="Symptom.Description" class="form-control" />
                <span asp-validation-for="Symptom.Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
