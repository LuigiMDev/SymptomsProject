@using SymptomsProject.Enums
@model SymptomsProject.Models.ViewModels.SymptomCreateViewModel

@{
    ViewData["Title"] = "Editar Sintomas";
}

<h1 class="text-center my-4">@ViewData["Title"]</h1>
<p class="text-center lead">Atualize as informações dos sintomas no formulário abaixo.</p>

<div class="row justify-content-center">
    <div class="col-md-6 col-lg-5">
        <div class="card shadow-sm border-0">
            <div class="card-body">
                <h4 class="card-title text-center text-primary mb-4">Informações do Paciente</h4>
                <form asp-action="Edit">
                    <div asp-validation-summary="ModelOnly" class="text-danger mb-3 text-center"></div>
                    <input type="hidden" asp-for="Symptom.Id" />
                    <input type="hidden" asp-for="Symptom.CreationDate" />
                    <div>
                        <label asp-for="Symptom.Patient" class="control-label font-weight-bold"></label>
                        <select asp-for="PatientSelectedId" class="form-control">
                            <option value="">Escolher...</option>
                            @foreach (Patient item in Model.Patients)
                            {
                                <option value="@item.Id">@item.Name</option>
                            }
                        </select>
                        <span asp-validation-for="PatientSelectedId" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Symptom.SeverityType" class="control-label font-weight-bold"></label>
                        <select asp-for="Symptom.SeverityType" class="form-control">
                            <option value="">Escolher...</option>
                            @foreach (SeverityType item in Enum.GetValues(typeof(SeverityType)))
                            {
                                <option value="@item">@Html.DisplayFor(model => item)</option>
                            }
                        </select>
                        <span asp-validation-for="Symptom.SeverityType" class="text-danger"></span>
                    </div>
                    <div>
                        <label asp-for="Symptom.SymptomTypes" class="control-label font-weight-bold"></label>
                        <div class="overflow-auto" style="max-height: 200px;">
                            @foreach (SymptomType item in Enum.GetValues(typeof(SymptomType)))
                            {
                                <div>
                                    <input type="checkbox" name="Symptom.SymptomTypes" value="@item" />
                                    @Html.DisplayFor(model => item)
                                </div>
                            }
                        </div>
                        <span asp-validation-for="Symptom.SymptomTypes" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Symptom.Description" class="control-label font-weight-bold"></label>
                        <input asp-for="Symptom.Description" class="form-control" />
                        <span asp-validation-for="Symptom.Description" class="text-danger"></span>
                    </div>

                    <div class="form-group text-center">
                        <input type="submit" value="Criar" class="btn btn-primary px-4 mt-3" />
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.16/jquery.mask.js"></script>
<script>
    $('#phone').mask('+55 (00) 00000-0000');
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

